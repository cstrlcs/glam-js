<%
  const properties = ["x", "y", "z", "w"].slice(0, it.length);
  const types = [2, 3, 4].map((type) => `${it.name}${type}`);
%>
	/** Applies a swizzle to the vector. Example: "v0._`xyxy` => <%= it.name %>4(this.x, this.y, this.x, this.y)" */
	_(value: TemplateStringsArray): <%= types.join(" | ") %> {
		const properties = ["x", "y", "z", "w"];
		const params = value[0].trim().split("");
		const values = [<%= properties.map(value => `this.${value}`).join(", ") %>];

		if (params.some((param) => !properties.slice(0, <%= it.length %>).includes(param))) {
			throw new Error("Invalid parameters. Only [<%= properties.join(", ") %>] are allowed.");
		}

		const coordinates = params.map(
			(param) => values[properties.indexOf(param)],
		);

		switch (params.length) {
			case 2:
				return new <%= types[0] %>(coordinates[0], coordinates[1]);
			case 3:
				return new <%= types[1] %>(coordinates[0], coordinates[1], coordinates[2]);
			case 4:
				return new <%= types[2] %>(
					coordinates[0],
					coordinates[1],
					coordinates[2],
					coordinates[3],
				);
			default:
				throw new Error("Invalid number of parameters.");
		}
	}
