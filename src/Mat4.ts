// Do not edit this file directly. Edit the template instead: `./codegen/templates/mat.txt`.

import { Vec4 } from "./";

export class Mat4 {
	constructor(
		public xAxis: Vec4,
		public yAxis: Vec4,
		public zAxis: Vec4,
		public wAxis: Vec4,
	) {}

	/**
	 * Creates a new `Mat4` from multiple values.
	 */
	static new(
		m00: number,
		m01: number,
		m02: number,
		m03: number,
		m10: number,
		m11: number,
		m12: number,
		m13: number,
		m20: number,
		m21: number,
		m22: number,
		m23: number,
		m30: number,
		m31: number,
		m32: number,
		m33: number,
	): Mat4 {
		return new Mat4(
			new Vec4(m00, m01, m02, m03),
			new Vec4(m10, m11, m12, m13),
			new Vec4(m20, m21, m22, m23),
			new Vec4(m30, m31, m32, m33),
		);
	}

	/** All zeroes. (0, 0..) */
	static get ZERO() {
		return Mat4.fromCols(Vec4.ZERO, Vec4.ZERO, Vec4.ZERO, Vec4.ZERO);
	}

	/** All `Identity`, where all diagonal elements are `1`, and all off-diagonal elements are `0`. */
	static get IDENTITY() {
		return Mat4.fromCols(Vec4.X, Vec4.Y, Vec4.Z, Vec4.W);
	}

	/** All `NaN`. (NaN, NaN..) */
	static get NAN() {
		return Mat4.fromCols(Vec4.NAN, Vec4.NAN, Vec4.NAN, Vec4.NAN);
	}

	/**
	 * Creates a 4x4 matrix from four column vectors.
	 */
	static fromCols(xAxis: Vec4, yAxis: Vec4, zAxis: Vec4, wAxis: Vec4): Mat4 {
		return new Mat4(xAxis, yAxis, zAxis, wAxis);
	}

	/**
	 * Creates a 4x4 matrix from four column vectors.
	 */
	static fromColsArray(m: number[]): Mat4 {
		return Mat4.new(
			m[0],
			m[1],
			m[2],
			m[3],
			m[4],
			m[5],
			m[6],
			m[7],
			m[8],
			m[9],
			m[10],
			m[11],
			m[12],
			m[13],
			m[14],
			m[15],
		);
	}

	/**
	 * Creates an array storing data in column major order.
	 */
	toColsArray(): number[] {
		return [
			this.xAxis.x,
			this.xAxis.y,
			this.xAxis.z,
			this.xAxis.w,
			this.yAxis.x,
			this.yAxis.y,
			this.yAxis.z,
			this.yAxis.w,
			this.zAxis.x,
			this.zAxis.y,
			this.zAxis.z,
			this.zAxis.w,
			this.wAxis.x,
			this.wAxis.y,
			this.wAxis.z,
			this.wAxis.w,
		];
	}
}
